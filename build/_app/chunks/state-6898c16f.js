var e=Object.defineProperty,t=Object.defineProperties,r=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,s=(t,r,o)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[r]=o,c=(e,t)=>{for(var r in t||(t={}))a.call(t,r)&&s(e,r,t[r]);if(o)for(var r of o(t))i.call(t,r)&&s(e,r,t[r]);return e},n=(e,o)=>t(e,r(o));import{D as d,H as l,R as p,L as u,C as y,I as v}from"./vendor-9b7a0713.js";const _={READY:"ready",DONE:"done",WAITING:"waiting"},O={NO_RECURRENCE:"no_recurrence",EVERY_WEEK_DAYS:"every_week_days",EVERY_MONTH_DAYS:"every_month_days"},w=()=>"undefined"!=typeof window;let f;w()&&(f=new l("pronto"),f.version(3).stores({actions:"_id,order",activities:"_id,order"}),window.dexieDb=f);const m=p({type:"no_recurrence",weekdays:u(),monthDays:u(),nextDate:""},"Recurrence"),S=p({_id:"",title:"",description:"",order:0,state:_.READY,recurrence:m(),createdAt:"",completedAt:""},"Activity"),D=p({activities:u()},"State"),E=y(D());console.log("state",E);const I=e=>(...t)=>E.update((r=>{const o=e(r,...t);return console.log("newState",o),o})),g=I(((e,t)=>{console.log("Save activity called with ",{currentState:e,activity:t});const r=e.activities.findIndex((e=>e._id===t._id)),o=t._id?t:t.merge({_id:v(),createdAt:d.utc().toISO(),order:e.activities.size}),a=r<0?e.activities.push(o):e.activities.set(r,o),i=e.set("activities",a);return console.log("index",r),console.log("newActivities",a),t._id?(f.activities.update(o._id,o.toJS()).catch((t=>{console.error(t),E.set(e)})),i):(f.activities.add(o.toJS()).catch((t=>{t&&(console.error(t),E.set(e))})),i)})),A=I(((e,t)=>{const r=e.activities.findIndex((e=>e._id===t._id)),{_id:o}=e.activities.get(r),a=e.update("activities",(e=>e.delete(r)));return f.activities.where({_id:o}).delete().catch((t=>{console.error(t),E.set(e)})),a})),b=I(((e,t)=>{const r=t.reduce(((e,{_id:t},r)=>n(c({},e),{[t]:r})),{}),o=e.activities.map((e=>{var t;return e.set("order",null!=(t=r[e._id])?t:e.order)})).sort(((e,t)=>e.order-t.order));console.log("new order",o.map((e=>`${e.order}. ${e.title}`)).toJS());const a=e.set("activities",o);return f.transaction("rw",f.activities,(async()=>o.map((e=>f.activities.update(e._id,{order:e.order}))))).catch((t=>{console.error(t),E.set(e)})),a})),h=e=>{const t=(({type:e,weekdays:t,monthDays:r,nextDate:o})=>{const a=d.now();switch(console.log("nextDate",o),console.log("localNextDate",localNextDate.toISO()),console.log("localNow",a.toISO()),e){case O.EVERY_WEEK_DAYS:{const e=o&&d.fromISO(o).toLocal().startOf("day"),r=e?e.startOf("day"):a.startOf("day");if(e&&e.diff(a).toMillis()>0)return o;console.log("fromDate.toISO()",r.toISO());const i=r.weekday,s=[...t.map((e=>+e)),...t.map((e=>+e+7))].sort(((e,t)=>e-t)).find((e=>e>i));return r.plus({days:s-i}).toUTC().toISO()}case O.EVERY_MONTH_DAYS:{const e=o&&d.fromISO(o).toLocal().startOf("day"),t=e?e.startOf("day"):a.startOf("day"),i=t.day,s=[...r.map((e=>+e)),...r.map((e=>+e+i.daysInMonth))].sort().find((e=>e>i));return t.plus({days:s-i}).toUTC().toISO()}default:return""}})(e.recurrence);g(e.merge({state:t?_.WAITING:_.DONE,completedAt:d.utc().toISO(),recurrence:e.recurrence.merge({nextDate:t})}))};w()&&(window.appState=E,window.dexieDb=f,window.DateTime=d,f.activities.orderBy("order").toArray().then((e=>{E.set(D({activities:u(e.map((e=>S(n(c({},e),{recurrence:m(e.recurrence)})))))}))})));export{_ as A,O as R,S as a,m as b,b as c,f as d,E as e,h as f,w as i,A as r,g as s};
