var e=Object.defineProperty,t=Object.defineProperties,r=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,s=(t,r,i)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[r]=i,c=(e,t)=>{for(var r in t||(t={}))o.call(t,r)&&s(e,r,t[r]);if(i)for(var r of i(t))a.call(t,r)&&s(e,r,t[r]);return e},n=(e,i)=>t(e,r(i));import{D as d,H as l,R as p,L as u,C as y,I as v}from"./vendor-3aa334d4.js";const _={READY:"ready",DONE:"done",WAITING:"waiting"},w={NO_RECURRENCE:"no_recurrence",EVERY_WEEK_DAYS:"every_week_days",EVERY_MONTH_DAYS:"every_month_days"},m=()=>"undefined"!=typeof window;let f;m()&&(f=new l("pronto"),f.version(3).stores({actions:"_id,order",activities:"_id,order"}),window.dexieDb=f);const O=p({type:"no_recurrence",weekdays:u(),monthDays:u(),nextDate:""},"Recurrence"),E=p({_id:"",title:"",description:"",order:0,state:_.READY,recurrence:O(),createdAt:"",completedAt:""},"Activity"),S=p({activities:u()},"State"),D=y(S());console.log("state",D);const A=e=>(...t)=>D.update((r=>{const i=e(r,...t);return console.log("newState",i),i})),I=A(((e,t)=>{console.log("Save activity called with ",{currentState:e,activity:t});const r=e.activities.findIndex((e=>e._id===t._id)),i=t._id?t:t.merge({_id:v(),createdAt:d.utc().toISO(),order:e.activities.size}),o=r<0?e.activities.push(i):e.activities.set(r,i),a=e.set("activities",o);return console.log("index",r),console.log("newActivities",o),t._id?(f.activities.update(i._id,i.toJS()).catch((t=>{console.error(t),D.set(e)})),a):(f.activities.add(i.toJS()).catch((t=>{t&&(console.error(t),D.set(e))})),a)})),b=A(((e,t)=>{const r=e.activities.findIndex((e=>e._id===t._id)),{_id:i}=e.activities.get(r),o=e.update("activities",(e=>e.delete(r)));return f.activities.where({_id:i}).delete().catch((t=>{console.error(t),D.set(e)})),o})),g=A(((e,t)=>{const r=t.reduce(((e,{_id:t},r)=>n(c({},e),{[t]:r})),{}),i=e.activities.map((e=>e.set("order",r[e._id]))).sort(((e,t)=>e.order-t.order));console.log("new order",i.map((e=>e.title)).toJS());const o=e.set("activities",i);return f.transaction("rw",f.activities,(async()=>i.map((e=>f.activities.update(e._id,{order:e.order}))))).catch((t=>{console.error(t),D.set(e)})),o})),h=e=>{const t=(({type:e,weekdays:t,monthDays:r,nextDate:i})=>{const o=d.utc();if(i&&d.fromISO(i).diffNow().toMillis()>0)return i;const a=i?d.fromISO(i).startOf("day"):o.startOf("day");switch(e){case w.EVERY_WEEK_DAYS:{const e=a.weekday,r=[...t.map((e=>+e)),...t.map((e=>+e+7))].sort(((e,t)=>e-t)).find((t=>t>e));return a.plus({days:r-e}).toISO()}case w.EVERY_MONTH_DAYS:{const e=a.day,t=[...r.map((e=>+e)),...r.map((t=>+t+e.daysInMonth))].sort().find((t=>t>e));return a.plus({days:t-e}).toISO()}default:return""}})(e.recurrence);I(e.merge({state:t?_.WAITING:_.DONE,completedAt:d.utc().toISO(),recurrence:e.recurrence.merge({nextDate:t})}))};m()&&(window.appState=D,window.dexieDb=f,window.DateTime=d,f.activities.orderBy("order").toArray().then((e=>{D.set(S({activities:u(e.map((e=>E(n(c({},e),{recurrence:O(e.recurrence)})))))}))})));export{_ as A,w as R,E as a,O as b,g as c,f as d,D as e,h as f,m as i,b as r,I as s};
