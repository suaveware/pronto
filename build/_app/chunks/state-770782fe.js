var e=Object.defineProperty,t=Object.defineProperties,r=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,s=(t,r,o)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[r]=o,c=(e,t)=>{for(var r in t||(t={}))i.call(t,r)&&s(e,r,t[r]);if(o)for(var r of o(t))a.call(t,r)&&s(e,r,t[r]);return e},n=(e,o)=>t(e,r(o));import{D as d,H as l,R as p,L as u,C as v,I as y}from"./vendor-9b7a0713.js";const _={READY:"ready",DONE:"done",WAITING:"waiting"},w={NO_RECURRENCE:"no_recurrence",EVERY_WEEK_DAYS:"every_week_days",EVERY_MONTH_DAYS:"every_month_days"},O=()=>"undefined"!=typeof window;let m;O()&&(m=new l("pronto"),m.version(3).stores({actions:"_id,order",activities:"_id,order"}),window.dexieDb=m);const f=p({type:"no_recurrence",weekdays:u(),monthDays:u(),nextDate:""},"Recurrence"),S=p({_id:"",title:"",description:"",order:0,state:_.READY,recurrence:f(),createdAt:"",completedAt:""},"Activity"),D=p({activities:u()},"State"),E=v(D());console.log("state",E);const I=e=>(...t)=>E.update((r=>{const o=e(r,...t);return console.log("newState",o),o})),g=I(((e,t)=>{console.log("Save activity called with ",{currentState:e,activity:t});const r=e.activities.findIndex((e=>e._id===t._id)),o=t._id?t:t.merge({_id:y(),createdAt:d.utc().toISO(),order:e.activities.size}),i=r<0?e.activities.push(o):e.activities.set(r,o),a=e.set("activities",i);return console.log("index",r),console.log("newActivities",i),t._id?(m.activities.update(o._id,o.toJS()).catch((t=>{console.error(t),E.set(e)})),a):(m.activities.add(o.toJS()).catch((t=>{t&&(console.error(t),E.set(e))})),a)})),A=I(((e,t)=>{const r=e.activities.findIndex((e=>e._id===t._id)),{_id:o}=e.activities.get(r),i=e.update("activities",(e=>e.delete(r)));return m.activities.where({_id:o}).delete().catch((t=>{console.error(t),E.set(e)})),i})),b=I(((e,t)=>{const r=t.reduce(((e,{_id:t},r)=>n(c({},e),{[t]:r})),{}),o=e.activities.map((e=>{var t;return e.set("order",null!=(t=r[e._id])?t:e.order)})).sort(((e,t)=>e.order-t.order));console.log("new order",o.map((e=>`${e.order}. ${e.title}`)).toJS());const i=e.set("activities",o);return m.transaction("rw",m.activities,(async()=>o.map((e=>m.activities.update(e._id,{order:e.order}))))).catch((t=>{console.error(t),E.set(e)})),i})),h=e=>{const t=(({type:e,weekdays:t,monthDays:r,nextDate:o})=>{const i=d.now();if(console.log("nextDate",o),console.log("now.toISO()",i.toISO()),o&&d.fromISO(o).diffNow().toMillis()>0)return o;const a=o?d.fromISO(o).startOf("day"):i.startOf("day");switch(console.log("fromDate.toISO()",a.toISO()),e){case w.EVERY_WEEK_DAYS:{const e=a.weekday,r=[...t.map((e=>+e)),...t.map((e=>+e+7))].sort(((e,t)=>e-t)).find((t=>t>e));return a.plus({days:r-e}).toISO()}case w.EVERY_MONTH_DAYS:{const e=a.day,t=[...r.map((e=>+e)),...r.map((t=>+t+e.daysInMonth))].sort().find((t=>t>e));return a.plus({days:t-e}).toISO()}default:return""}})(e.recurrence);g(e.merge({state:t?_.WAITING:_.DONE,completedAt:d.utc().toISO(),recurrence:e.recurrence.merge({nextDate:t})}))};O()&&(window.appState=E,window.dexieDb=m,window.DateTime=d,m.activities.orderBy("order").toArray().then((e=>{E.set(D({activities:u(e.map((e=>S(n(c({},e),{recurrence:f(e.recurrence)})))))}))})));export{_ as A,w as R,S as a,f as b,b as c,m as d,E as e,h as f,O as i,A as r,g as s};
