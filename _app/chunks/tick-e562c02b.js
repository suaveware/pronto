import{G as e}from"./vendor-6f51b870.js";const r={READY:{key:"ready",label:"Próximo"},DONE:{key:"done",label:"Finalizado"},WAITING:{key:"waiting",label:"Aguardando"}},o={NO_RECURRENCE:{key:"no_recurrence",label:"Sem recorrência"},EVERY_WEEK_DAYS:{key:"every_week_days",label:"Por dias da semana"},EVERY_MONTH_DAYS:{key:"every_month_days",label:"Por dias do mês"}},a=()=>"undefined"!=typeof window,n=(e,r,o)=>{if(!e[r]||!e[o])return void console.warning("Tried to move elements from out of bounds index:",{array:e,fromIndex:r,toIndex:o});const a=[...e],n=a[r];return a.splice(r,1),a.splice(o,0,n),a},t=({type:r,weekdays:a,monthDays:n},t=e.now())=>{switch(r){case o.NO_RECURRENCE.key:return"";case o.EVERY_WEEK_DAYS.key:{if(!a.size)return"";const e=t.startOf("day"),r=e.weekday,o=[...a.map((e=>+e)),...a.map((e=>+e+7))].sort(((e,r)=>e-r)).find((e=>e>r));return e.plus({days:o-r}).toUTC().toISO()}case o.EVERY_MONTH_DAYS.key:{if(!n.size)return"";const e=t.startOf("day"),r=e.day,o=[...n.map((e=>+e)),...n.map((r=>+r+e.daysInMonth))].sort().find((e=>e>r));return e.plus({days:o-r}).toUTC().toISO()}default:return console.error(`Returning empty next date. No match for recurrence type "${r}".`),""}},s=[],d=s.push.bind(s);if(a()){window.prontoTick=()=>{s.forEach((e=>e()))};const e=setInterval((()=>window.prontoTick({timer:e,TIMEOUT:500})),500);window.prontoTickTimer=e}export{r as A,o as R,d as a,t as c,a as i,n as m};
