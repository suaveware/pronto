var e=Object.defineProperty,t=Object.defineProperties,r=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,s=(t,r,i)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[r]=i,n=(e,t)=>{for(var r in t||(t={}))a.call(t,r)&&s(e,r,t[r]);if(i)for(var r of i(t))o.call(t,r)&&s(e,r,t[r]);return e},c=(e,i)=>t(e,r(i));import{H as d,I as l,R as y,L as w,J as v,C as p,K as u}from"./vendor-90cda898.js";const m={READY:{key:"ready",label:"Próximo"},DONE:{key:"done",label:"Finalizado"},WAITING:{key:"waiting",label:"Aguardando"}},h={NO_RECURRENCE:{key:"no_recurrence",label:"Sem recorrência"},EVERY_WEEK_DAYS:{key:"every_week_days",label:"Por dias da semana"},EVERY_MONTH_DAYS:{key:"every_month_days",label:"Por dias do mês"}},k=()=>"undefined"!=typeof window,f=({type:e,weekdays:t,monthDays:r},i=d.now())=>{switch(e){case h.NO_RECURRENCE.key:return"";case h.EVERY_WEEK_DAYS.key:{if(!t.size)return"";const e=i.startOf("day"),r=e.weekday,a=[...t.map((e=>+e)),...t.map((e=>+e+7))].sort(((e,t)=>e-t)).find((e=>e>r));return e.plus({days:a-r}).toUTC().toISO()}case h.EVERY_MONTH_DAYS.key:{if(!r.size)return"";const e=i.startOf("day"),t=e.day,a=[...r.map((e=>+e)),...r.map((t=>+t+e.daysInMonth))].sort().find((e=>e>t));return e.plus({days:a-t}).toUTC().toISO()}default:return console.error(`Returning empty next date. No match for recurrence type "${e}".`),""}},_=[],E=_.push.bind(_);if(k()){window.prontoTick=()=>{_.forEach((e=>e()))};const e=setInterval((()=>window.prontoTick({timer:e,TIMEOUT:500})),500);window.prontoTickTimer=e}let I;k()&&(I=new l("pronto"),I.version(3).stores({activities:"_id,order"}),window.dexieDb=I);const g=(e={})=>y({type:"no_recurrence",weekdays:w(),monthDays:w(),nextDate:""},"Recurrence")(c(n({},e),{weekdays:w(e.weekdays),monthDays:w(e.monthDays)})),A=(e={})=>y({_id:"",name:"",checked:!1})(n({_id:v()},e)),O=(e={})=>{var t,r;return y({_id:"",title:"",description:"",order:0,state:m.READY.key,recurrence:g(),checkList:w(),createdAt:"",completedAt:"",workIntervals:w()},"Activity")(c(n({_id:v()},e),{recurrence:g(e.recurrence),checkList:w((null==(r=null==(t=e.checkList)?void 0:t.map)?void 0:r.call(t,A))||[]),workIntervals:w(e.workIntervals||[])}))},D=(e={})=>y({showDoneActivities:!1,showWaitingActivities:!0,theme:""},"Config")(n({},e)),b=y({activities:w(),config:D()},"State");k()&&(window.List=w,window.Record=y,window.Config=D);const S=p(b()),R=e=>(...t)=>S.update((r=>e(r,...t))),T=R(((e,t)=>{const r=e.activities.findIndex((e=>e._id===t._id)),i=r>=0?t:t.merge({createdAt:d.utc().toISO(),order:e.activities.size}),a=r<0?e.activities.push(i):e.activities.set(r,i),o=e.set("activities",a);return I.activities.put(i.toJS(),i._id).catch((r=>{console.error("Error on updating activity: ",{activity:t,error:r}),S.set(e)})),o})),N=R(((e,t)=>{const r=e.activities.findIndex((e=>e._id===t._id)),{_id:i}=e.activities.get(r),a=e.update("activities",(e=>e.delete(r)));return I.activities.where({_id:i}).delete().catch((r=>{console.error("Error on deleting activity: ",{activity:t,error:r}),S.set(e)})),a})),C=R(((e,t)=>{const r=t.reduce(((e,{_id:t},r)=>c(n({},e),{[t]:r})),{}),i=e.activities.map((e=>{var t;return e.set("order",null!=(t=r[e._id])?t:e.order)})).sort(((e,t)=>e.order-t.order)),a=e.set("activities",i);return I.transaction("rw",I.activities,(async()=>i.map((e=>I.activities.update(e._id,{order:e.order}))))).catch((t=>{console.error("Error on reordering activities: ",{activities:e.activities,newActivities:i,error:t}),S.set(e)})),a})),Y=R(((e,t)=>{const r=e.set("config",t);return Object.keys(t.toJS()).forEach((e=>{localStorage.setItem(e,t.get(e))})),r})),x=e=>{const t=f(e.recurrence);console.info(`Completing activity with next date: ${t}`,e),T(e.set("state",t?m.WAITING.key:m.DONE.key).set("completedAt",d.utc().toISO()).setIn(["recurrence","nextDate"],t).setIn(["workIntervals"],w()).updateIn(["checkList"],(e=>e.map((e=>e.set("checked",!1))))))},j=R((e=>e.update("activities",(e=>e.map((e=>e.state===m.WAITING.key&&d.now()>=d.fromISO(e.nextDate)?e.set("state",m.READY.key):e)))))),P=async()=>{const e=await I.activities.orderBy("order").toArray(),t=w(e.map(O));S.set(b({activities:t,config:D({showDoneActivities:"true"===localStorage.getItem("showDoneActivities"),showWaitingActivities:"true"===localStorage.getItem("showWaitingActivities"),theme:localStorage.getItem("theme")})}))};k()&&(window.appState=S,window.DateTime=d,window.Interval=u,window.refreshState=P,window.checkRecurrencies=j,P(),E(j));export{O as A,A as C,h as R,g as a,T as b,f as c,m as d,x as e,Y as f,C as g,N as r,S as s};
